name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os.machine }}
    runs-on: ${{ matrix.os.machine }}
    strategy:
      fail-fast: false
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        # os: [{ubuntu-latest: , windows-latest, macos-13, macos-14]
        os: [{machine: ubuntu-latest, ext: so},
          {machine: windows-latest, ext: lib},
          # {machine: macos-13, ext: dylib},
          {machine: macos-14, ext: dylib}]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
      - uses: actions/setup-go@v2
        with:
          go-version: 1.23

      # - name: Install cibuildwheel
      #   run: python -m pip install cibuildwheel==2.21.3

      - name: Build d2lang library
        run: |
          cd lib
          go mod tidy
          go build -buildmode=c-shared -o d2lib.${{ matrix.os.ext }} d2lib.go
          cd ..
          ls lib

      - name: Move library to resources folder
        run: |
          mkdir -p d2/resources
          mv lib/d2lib.${{ matrix.os.ext }} d2/resources/d2lib.${{ matrix.os.ext }}
          mv lib/d2lib.h d2/resources/d2lib.h

      - name: Test library
        run: |
          pip install -r requirements_test.txt
          python -m pytest -vs

      # - name: Build wheels
      #   run: python -m cibuildwheel --output-dir wheelhouse

      - name: Build package
        run: |
          pip install build
          python -m build -w
          ls dist

      - name: Remove sources and test package
        run: |
          rm -rf build || true
          rm -rf lib || true
          rm -rf d2
          WHEELFILENAME=$(find . -name "pyd2*.whl")
          echo "WHEELFILENAME: $WHEELFILENAME"
          if [ -z "$WHEELFILENAME" ]; then
            echo "No wheel found"
            exit 1
          fi
          pip install $WHEELFILENAME
          python -m pytest -vs

      - uses: actions/upload-artifact@v4
        with:
          name: d2lib-${{ matrix.os.machine }}
          path: ./dist/*

      - name: Post development build to GH releases page
        uses: "marvinpinto/action-automatic-releases@latest"
        if: github.ref == 'refs/heads/main'
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Latest Development Build"
          files: ./dist/*