name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os.machine }}
    runs-on: ${{ matrix.os.machine }}
    strategy:
      fail-fast: false
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        # os: [{ubuntu-latest: , windows-latest, macos-13, macos-14]
        os: [{machine: ubuntu-latest, ext: so},
          {machine: windows-latest, ext: lib},
          # {machine: macos-13, ext: dylib},
          {machine: macos-14, ext: dylib}]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: 3.9
      - uses: actions/setup-go@v2
        with:
          go-version: 1.23

      # - name: Install cibuildwheel
      #   run: python -m pip install cibuildwheel==2.21.3

      - name: Build d2lang library
        run: |
          cd lib
          go mod tidy
          go build -buildmode=c-shared -o d2lib.${{ matrix.os.ext }} d2lib.go
          cd ..

      - name: Move library to resources folder
        shell: bash
        run: |
          mkdir -p d2/resources
          mv lib/d2lib.${{ matrix.os.ext }} d2/resources/d2lib.${{ matrix.os.ext }}
          mkdir libs
          cp d2/resources/d2lib.${{ matrix.os.ext }} libs/
          rm -rf libs

      - name: Test library
        run: |
          pip install -r requirements_test.txt
          python -m pytest -vs

      - name: Build Wheel
        run: |
          python -m pip install build wheel setuptools
          python -m build --wheel

      - uses: actions/upload-artifact@v4
        with:
          name: pyd2native-wheel-${{ matrix.os.machine }}
          path: ./dist/*.whl

  upload:
    permissions:
      contents: write
    # Download all the wheels from the previous job
    name: Upload wheels
    needs: build_wheels
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: "."

      - name: Check artifacts
        run: |
          ls -lh .
          ls -lh *
          ls -lh */*
          mkdir dist
          cp */*.whl dist/
          ls -lh ./dist/*.whl

      - name: Post development build to GH releases page
        uses: "marvinpinto/action-automatic-releases@latest"
        if: github.ref == 'refs/heads/main'
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Latest Development Build"
          files: ./dist/*

      - uses: pypa/gh-action-pypi-publish@release/v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}